package main

import (
	"fmt"
	"net"
	"os"
	"os/signal"
	"syscall"
	"time"
)

func main() {
	ticker := time.NewTicker(time.Second)
	defer ticker.Stop()

	done := make(chan os.Signal, 1)
	signal.Notify(done, syscall.SIGTERM, syscall.SIGINT)

	for {
		select {
		case <-done:
			ticker.Stop()
			fmt.Println("shutting down...")
			return
		case <-ticker.C:
			fmt.Printf("%t", internetReachable())
		}
	}
}

func internetReachable() bool {
	_, err := net.DialTimeout("tcp", "1.1.1.1:80", time.Second*1)
	return err == nil
}
